PRACTICAL 6B
SVM Classification
Aim:
b) Implement SVM Classification technique using Social_Network_Ads.csv dataset.
Evaluate the performance of classifier.
Code:
# Support Vector Machine (SVM)
# Importing the dataset
dataset = read.csv('C:\\2022-23\\BDA PRACTICAL 2023\\Social_Network_Ads.csv')
dataset = dataset[3:5] print(dataset)
print(dataset$Purchased)
# Splitting the dataset into the Training set and Test set
install.packages('caTools') library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.75)
training_set = subset(dataset, split == TRUE) print(training_set)
test_set = subset(dataset, split == FALSE)
print(test_set) #
Feature Scaling
training_set[-3] = scale(training_set[-3]) # [-3] means 3rd index will be dropped
test_set[-3] = scale(test_set[-3]) print(training_set[-3]) print (test_set[-3])
# Fitting SVM to the Training set
install.packages('e1071') library(e1071)
classifier = svm(formula = Purchased ~ .,
data = training_set, type = 'C-
classification', kernel =
'linear')
print (classifier)
# Predicting the Test set results
y_pred = predict(classifier, newdata = test_set[-3]) print(y_pred)
# Making the Confusion Matrix cm
= table(test_set[, 3], y_pred) print
(cm)
Output: